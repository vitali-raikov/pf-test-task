apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Chart.Name }}
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      {{ if ge .Values.replicaCount 2.0}}
      maxUnavailable: 1
      {{ else }}
      maxUnavailable: 0
      {{ end }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      volumes:
      - name: php-socket
        emptyDir: {}
      - name: html
        emptyDir: {}
      - name: nginx-config-volume
        configMap:
          name: nginx-config

      initContainers:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.name }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
{{ toYaml .Values.env | indent 10 }}
        volumeMounts:
          - name: shared-files
            mountPath: /var/www/html
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 2
          periodSeconds: 5
          timeoutSeconds: 2
        volumeMounts:
          - name: php-socket
            mountPath: /sock
          - name: html
            mountPath: /var/www/html
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "cp -r /app/. /var/www/html"]

      - name: nginx
        image: nginx:stable
        ports:
        - containerPort: {{ .Values.service.externalPort }}
        command: ["/usr/sbin/nginx", "-g", "daemon off;"]
        volumeMounts:
        - name: php-socket
          mountPath: /sock
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
        - name: html
          mountPath: /var/www/html
        readinessProbe:
          httpGet:
            path: {{ .Values.service.statusEndpoint }}
            port: {{ .Values.service.externalPort }}
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: {{ .Values.service.statusEndpoint }}
            port: {{ .Values.service.externalPort }}
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        # Introduce a delay to the shutdown sequence to wait for the
        # pod eviction event to propagate. Then, gracefully shutdown
        # nginx.
        lifecycle:
          preStop:
            exec:
              command: [
                "sh", "-c",
                "sleep 5 && /usr/sbin/nginx -s quit",
              ]
